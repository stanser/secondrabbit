{
  "name": "kwbl-gen",
  "version": "0.1.0",
  "author": {
    "name": "Yurch",
    "email": "y.yurchenko@kwebbl.com"
  },
  "contributors": [
    {
      "name": "Yurch",
      "email": "y.yurchenko@kwebbl.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+ssh://git@bitbucket.org:kwebbl/kwbl-gen.git"
  },
  "bugs": {
    "url": "https://bitbucket.org/kwebbl/kwbl-gen/issues"
  },
  "main": "generator.js",
  "dependencies": {},
  "devDependencies": {
    "jasmine-node": "^1.14.5"
  },
  "preferGlobal": false,
  "readme": "#Introduction\n\nMini util to extend `Math.random()`.\nMent to create different values what used in kwebbl and more.\n\n\n#Topics\n- [Quick start](#quick-start)\n- [API Reference and examples](#api-reference-and-examples)\n\t- [`.uuid()`](#uuid)\n\t- [`.guid()`](#guid)\n\t- [`.uid()`](#uid)\n\t- [`.random()`](#random)\n\t- [`.duration()`](#duration)\n\t- [`.cost()`](#cost)\n\t- [`.costToStr()`](#costtostr)\n\t- [`.couchTimeStamp()`](#couchtimestamp)\n\t- [`.scriptName()`](#scriptname)\n\n\n#Quick start\n\n##Install\n###npm\nRequire ssh be configured to access remote repository on bitbucket.\n\n\tnpm install kwbl-gen@git+ssh://git@bitbucket.org:kwebbl/kwbl-gen.git#master -s\n\nUse your bitbucket username and password\n\n\tnpm install kwbl-gen@git+https://yyurch@bitbucket.org/kwebbl/kwbl-gen.git#master -s\n\n`-s` optional, used to add dependency to package.json\n\n\n###package.json and npm\nAdd dependency to package.json of your app/script.\nMain way to include git repo dependency. Require ssh be configured.\n\n```js\n{\n\t...\n\t\"dependencies\": {\n\t\t\"kwbl-gen\": \"git+ssh://git@bitbucket.org:kwebbl/kwbl-gen.git#master\"\n\t}\n\t...\n}\n```\n\nOther way to include, without ssh key. Use your bitbucket username in dependency and your bitbucket password during instalation.\n\n```js\n{\n\t...\n\t\"dependencies\": {\n\t\t\"kwbl-gen\": \"git+https://username@bitbucket.org:kwebbl/kwbl-gen.git#master\"\n\t}\n\t...\n}\n```\n\nAnd then run fom inside the folder app/script:\n\n\tnpm install\n\n\n\n##Use\n\n```js\n\tvar gen = require(\"kwbl-gen\");\n```\n\n\n#API Reference and examples\n###`.uuid()`\n\n\tgen.uuid();\n\nReturns [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)\n\n###`.guid()`\n\n\tgen.guid();\n\nAlias for `.uuid()`. ([thanx MS](http://stackoverflow.com/questions/246930/is-there-any-difference-between-a-guid-and-a-uuid))\n\n###`.uid()`\n\n\tgen.uid();\n\nGenerate random sequence of 8 symbols length. Use `A-Z`, `a-z`, `0-9`\n\n\tgen.uid((int) legth);\n\nYou can specify `length` of sequence.\n\n###`.random()`\n\n\tgen.random();\n\nReturn random integer from `0` to `10`.\n\n\tgen.random((int) max);\n\nReturn random integer from `0` to `max`. Or if max negative from max to `0`.\n\n\tgen.random((int) min, (int) max);\n\nReturn random integer from min to max. `min` should be less then `max`, or they will be swapped.\n\n\tgen.random((Array) array);\n\nReturn random element from `array`.\n\n\tgen.random((Array) array, (boolean) keyOnly);\n\nReturn random key of `array` if `keyOnly` === true.\n\n\tgen.random((Object) object);\n\nReturn random element from `object`\n\n\tgen.random((Object) object, (boolean) keyOnly);\n\nReturn random key of `object` if `keyOnly` === true.\n\n###`.duration()`\n\n\tgen.duration();\n\nReturn random call duration, in seconds, from 0 sec to half hour. Same as `gen.random(30*60);`\n\n###`.cost()`\n\n\tgen.cost();\n\nReturn random cost integer. 0 - 100000. kweblo cents 50000 mean 0.5 unit ($, €, ₴, ¥)\n\n\tgen.cost(mult);\n\nReturn integer, multiplied random cost to `mult` (duration for instance).\n\n###`.costToStr()`\n\n\tgen.costToStr((int) cost);\n\nConvert kweblo cents `cost` to string in units. 50000 => \"0.50000\"\n\n###`.couchTimeStamp()`\n\n\tgen.couchTimeStamp();\n\nReturn object with current date for db. Example:\n```js\n\t{\n\t\t\"t\": 1414602990831, //timestamp, ms\n\t\t\"Y\": 2014,          //year\n\t\t\"M\": 10,            //month\n\t\t\"D\": 29,            //day\n\t\t\"h\": 19,            //hour\n\t\t\"m\": 16,            //minute\n\t\t\"s\": 30,            //second\n\t\t\"z\": \"UTC+2\"        //timezone\n\t}\n```\n\n\tgen.couchTimeStamp((int) shift);\n\nReturn object for db, use current date with shift in ms, positive or negative.\n\n\tgen.couchTimeStamp((Date) date);\n\nReturn object for db, use `date` as date.\n\n\tgen.couchTimeStamp((Date) date, (int) shift);\n\nReturn object for db, use `date` as date and do shift in ms.\n\n###`.scriptName()`\n\n\tgen.scriptName((string) path);\n\nReturn the name of the file from `path`. `/usr/tmp/test_script.js` => `test_script`. Good for use like `gen.scriptName(__filename)`.",
  "readmeFilename": "README.md",
  "description": "Mini util to extend `Math.random()`. Ment to create different values what used in kwebbl and more.",
  "_id": "kwbl-gen@0.1.0",
  "_shasum": "3509cc4e539d33bdee474de6855dda823c635276",
  "_resolved": "git+ssh://git@bitbucket.org:kwebbl/kwbl-gen.git#b1e77668c9ca222c3e2ec3156a8c4360f6e650c9",
  "_from": "kwbl-gen@git+ssh://git@bitbucket.org:kwebbl/kwbl-gen.git#master"
}
